'''
 1) python面向对象的特点是什么
   2) 继承给我带来什么好处
   3) super关键字有什么作用
   4) 定义类的__init__方法可以有返回值吗,自己尝试一下
   5) 当子类定义了与父类相同的方法的时候,会怎么样
   6) 实例化对象的时候,类的什么方法会自动调用
   7)一下几天语句体现了python的什么特性
         “i love python”.count('0')
        (1,2,3,2,1,5,6,2,9).count(2)
        [1,2,3,2,1,2,2,4,5,6,5,5].count(5)
    8) python类内部的self有什么作用,需要传递此参数吗
    9) 装饰器有什么作用,说说你知道的有哪些装饰器
    10) python允许多继承吗,自己的代码中大量出现多继承有哪些弊端

'''
1.有三大特征：封装，继承，多态
2.继承让程序更加有逻辑性，是整体程序更有连贯性，也在一定程度上减少了代码量
3.super是子类用来调用父类方法的
	基本结构：super().__init()
4.没有返回值
5.
6. __init__的方法会自动调用
7.体现了python万物皆对象的特性
8. self 就是类实例对象的本身，不需要传递self，解释器会自动将值传下去
9. 装饰器就是用来拓展原来函数功能的一种函数，他的返回值也是一个函数，使用装饰器可以不在改原来函数的代码前提下给函数增加新的功能。
@property@[].setter
10.允许多继承，子类调用一个自身没有定义的属性，比较困难在众多父类同名属性中找这个属性


















