#4. 回答一下问题
#   1) python面向对象的特点是什么
#   2) 继承给我带来什么好处
#   3) super关键字有什么作用
#   4) 定义类的__init__方法可以有返回值吗,自己尝试一下
#   5) 当子类定义了与父类相同的方法的时候,会怎么样
#   6) 实例化对象的时候,类的什么方法会自动调用
#   7)一下几天语句体现了python的什么特性
#         “i love python”.count('0')
#        (1,2,3,2,1,5,6,2,9).count(2)
#        [1,2,3,2,1,2,2,4,5,6,5,5].count(5)
#    8) python类内部的self有什么作用,需要传递此参数吗
#    9) 装饰器有什么作用,说说你知道的有哪些装饰器
#    10) python允许多继承吗,自己的代码中大量出现多继承有哪些弊端
'''
1.封装多态继承
2.建造系统中的类，避免重复操作，新类经常是基于已经存在的类，这样就可以提升代码的复用程度
3.是用来解决多重继承问题的，直接用类名调用父类方法在使用单继承的时候没问题但是如果使用多继承，会涉及到查找顺序重复调用等种种问题
4.不可以  实例化子类时，则不会隐式的再去调用超类中已定义的__init__
5.就是从继承搜索树的叶子节点，即子类开始寻找.号后面的函数或成员，如果能找到，就停止搜索；如果找不到，就往上的父类找。
6.__init__方法会自动调用
7.动态
8.self就是指类本身,self是指当前被调用的对象当你需要调用当前对象的方法或者属性时，要用self. 来进行调用
9.python装饰器就是用于拓展原来函数功能的一种函数，这个函数的特殊之处在于它的返回值也是一个函数，使用python装饰器的好处就是在不用更改原函数的代码前提下给函数增加新的功能。系统内置装饰器（staticmeth  od、classmethod 和property）

10.允许 ，传参混乱










'''
